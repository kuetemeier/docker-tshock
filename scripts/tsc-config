#!/usr/bin/env bash

usage="It sets main tShock config.

Usage: $(basename "$0") <action> [<option>]

Actions
    get <prop>          : Get <prop> value for property
    set <prop> <value>  : Set to property <prop> given <prop>
    grep <regex>        : Find property matching regex
    ls                  : List all property names

Options
    -h,--help            : Show this help"

field=
value=

function set() {
    valueType=$(jq --arg field "$field" '.[$field]|type' < ${TSHOCK_HOME}/tshock/config.json)
    if [[ "$valueType" == '"string"' ]]; then
        jq --arg field "$field" --arg value "$value" '.[$field]=$value' < ${TSHOCK_HOME}/tshock/config.json > /tmp/config.json && \
        mv /tmp/config.json ${TSHOCK_HOME}/tshock/config.json;
    else
        jq --arg field "$field" --argjson value "$value" '.[$field]=$value' < ${TSHOCK_HOME}/tshock/config.json > /tmp/config.json && \
        mv /tmp/config.json ${TSHOCK_HOME}/tshock/config.json;
    fi
    echo "${field}:${value}"
}

function get() {
    value=$(jq -r ".${field}" < ${TSHOCK_HOME}/tshock/config.json) ;
    echo "${field}:${value}"
}

function validate_field() {
    if [[ -z $(jq --arg sfield ${field} 'select(.| has($sfield))' < ${TSHOCK_HOME}/tshock/config.json) ]]; then
        echo "Field ${field} does not exists."
        exit 1
    fi
}

function list() {
    jq -r 'keys[]' < ${TSHOCK_HOME}/tshock/config.json
}

function find() {
    list | grep $1
}

case $1 in
    "set" ) shift
          if [ $# -ne 2 ]; then
              echo "Invalid number of arguments."
              exit 1
          fi
          field=$1
          value=$2
          set
          ;;
    "get" ) shift
          if [ $# -ne 1 ]; then
              echo "Invalid number of arguments."
              exit 1
          fi
          field=$1
          get
          ;;
    "ls" ) shift
          list
          ;;
    "grep" ) shift
           if [ $# -ne 1 ]; then
              echo "Invalid number of arguments."
              exit 1
           fi
           find $@
           ;;
    * ) echo "Unkown argument $1"
        exit 1
        ;;
esac